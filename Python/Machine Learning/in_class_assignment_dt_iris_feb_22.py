# -*- coding: utf-8 -*-
"""In Class Assignment DT Iris Feb 22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i6kcT5WE6q2MH6RtnKuG0IdnhO7dVxCM
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

from sklearn.datasets import load_iris
iris = load_iris()
type(iris)

iris.feature_names

iris.data.shape

iris.target.shape

df = pd.DataFrame(iris.data, columns=iris.feature_names)
df.head()

df['Target'] = iris.target
df.head()

df.tail()

sns.pairplot(df, hue='Target', palette='Set1')

plt.figure(figsize=(6, 4))
sns.heatmap(df.corr(), )

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df[iris.feature_names],
                                                    df['Target'],
                                                    test_size=0.2,
                                                    random_state=101)

from sklearn.tree import DecisionTreeClassifier
dtree = DecisionTreeClassifier(criterion='entropy')
dtree.fit(X_train, y_train)
# help(DecisionTreeClassifier)
# criterion: {'gini', 'entropy', 'log_loss'}, default = 'gini'

predictions = dtree.predict(X_test)

# Confusion Matrix

# Code starting here and down will not be on exam
from IPython.display import Image
from six import StringIO
from sklearn.tree import export_graphviz
import pydot

features = list(df.columns[:-1])
features

dot_data = StringIO()
export_graphviz(dtree, out_file=dot_data, feature_names=features, filled=True, rounded=True)

graph = pydot.graph_from_dot_data(dot_data.getvalue())
Image(graph[0].create_png())

